name: deploy

on:
  push:
    branches: [ main ]

permissions:
  deployments: write
  packages: write
  contents: write

env:
  READER_TOKEN: ${{ secrets.READER_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Git User
        uses: fregante/setup-git-user@v2

      - name: Set Next Version
        run: >
          mvn eux-versions:set-next -B -e -U --settings ./.github/settings.xml
          -DmajorVersion=1
          -DnewVersion=${{ github.event.inputs.version }}
          --no-transfer-progress

      - name: Extract New Version
        id: versions
        run: >
          echo "version=$(mvn -q --no-transfer-progress --settings ./.github/settings.xml 
          -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Mvn Deploy
        run: mvn clean deploy scm:tag -B -e -U --settings ./.github/settings.xml --no-transfer-progress
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Echo Version
        run: echo "### Version ${{ steps.versions.outputs.version }}" >> $GITHUB_STEP_SUMMARY

      - name: Release Drafter
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: "${{ steps.versions.outputs.version }}"
          version: "v${{ steps.versions.outputs.version }}"
          tag: "eux-parent-pom-${{ steps.versions.outputs.version }}"
          publish: true
